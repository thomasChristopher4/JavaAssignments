#BlueJ class context
comment0.params=
comment0.target=TreeNode()
comment1.params=data\ parent
comment1.target=TreeNode(java.lang.Comparable,\ TreeNode)
comment10.params=
comment10.target=TreeNode\ getRightChild()
comment10.text=\r\n\ @return\ the\ rightChild\r\n
comment11.params=contentToSearch
comment11.target=TreeNode\ findNodeOnTree(java.lang.Comparable)
comment11.text=\r\n\ Given\ an\ object\ T\ contentToSearch,\ this\ method\ returns\r\n\ the\ node\ that\ stores\ the\ contentToShare\ or\ null\ if\ not\ found\ on\ the\ current\ tree\r\n\ @return\ the\ node\r\n
comment12.params=
comment12.target=int\ getLevel()
comment12.text=\r\n\ @return\ the\ level\r\n
comment13.params=level
comment13.target=void\ setLevel(int)
comment13.text=\r\n\ @param\ level\ the\ level\ to\ set\r\n
comment2.params=node
comment2.target=void\ setLeftChild(TreeNode)
comment3.params=node
comment3.target=void\ setRightChild(TreeNode)
comment4.params=data
comment4.target=boolean\ isContentEquals(java.lang.Comparable)
comment5.params=
comment5.target=java.lang.Comparable\ getContents()
comment5.text=\r\n\ @return\ the\ contents\r\n
comment6.params=contents
comment6.target=void\ setContents(java.lang.Comparable)
comment6.text=\r\n\ @param\ contents\ the\ contents\ to\ set\r\n
comment7.params=
comment7.target=TreeNode\ getParent()
comment7.text=\r\n\ @return\ the\ parent\r\n
comment8.params=parent
comment8.target=void\ setParent(TreeNode)
comment8.text=\r\n\ @param\ parent\ the\ parent\ to\ set\r\n
comment9.params=
comment9.target=TreeNode\ getLeftChild()
comment9.text=\r\n\ @return\ the\ leftChild\r\n
numComments=14
